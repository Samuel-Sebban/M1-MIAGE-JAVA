{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf610
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red53\green53\blue53;\red27\green31\blue35;}
{\*\expandedcolortbl;;\cssrgb\c27059\c27059\c27059;\cssrgb\c14118\c16078\c18431;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab560
\pard\pardeftab560\slleading20\partightenfactor0

\f0\b\fs24 \cf2 \ul \ulc2 EX1
\b0 \ulnone \
\
1)Voir Projet\
\
2)En \'e9crivant sysout et ensuite en pressant Ctrl+Space cela nous emm\'e8ne directement \'e0 System.out.println()\
\
3)Permet de faire un raccourci pour la m\'e9thode ToString() qui h\'e9rite de la classe objet \
\
4)Permet de cr\'e9er une m\'e9thode main directement avec sa signature \
\
5)Il nous est propos\'e9 d\'92\'e9crire le constructeur ou la m\'e9thode set .\
\
6)On peut renommer la  classe m\'eame chose pour la variable.\
\
7)A la maison.\
\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\slleading20\partightenfactor0

\b \cf2 \ul EX2:\ulnone \

\b0 \
1)
\b public
\b0  
\b class
\b0  Point \{\
	
\b private
\b0  
\b int
\b0  x;\
	
\b private
\b0  
\b int
\b0  y;\
	
\b public
\b0  
\b static
\b0  
\b void
\b0  main(String[] args) \{\
		Point p=
\b new
\b0  Point(); \
		System.
\i\b out
\i0\b0 .println(p.x+" "+p.y);\
\}\
\
\
La m\'e9thode main est dans la class Point, on peut donc cr\'e9\'e9 une instance de point dans la class \
Point car les entiers x et y sont priv\'e9s .\
\
2)x et y ne sont pas accessibles dans TestPoint avec un main car on fait appel \'e0 x et y sont dans la classe Point et ne sont pas accessibles dans  la classe TestPoint car ils sont priv\'e9s .\
Un rem\'e8de serait de mettre  x et y en public.\
\
3)Il faut toujours que les champs d\'92une classe soient priv\'e9s\'a0 pour qu\'92ils ne soient pas accessibles par tous dans tout le programme  (dans toute les classes) et \'e9viter que n\'92importe qui puisse modifier l\'92attribut  \'e0 tout moment .\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf2 4)On utilise les accesseurs (getter) afin de pouvoir acc\'e9der a champ priv\'e9 (c\'92est \'e0 dire non accessible dans toutes les classes )  dans une autre classe.\
Oui, si on veut r\'e9cup\'e9rer les variables de point dans Textpoint .\
\
\pard\pardeftab560\slleading20\partightenfactor0

\b \cf2 public
\b0  
\b class
\b0  TestPoint \{\
	
\b public
\b0  
\b static
\b0  
\b void
\b0  main(String[] args) \{\
		Point p=
\b new
\b0  Point(); \
		System.
\i\b out
\i0\b0 .println(p.getX()+" "+p.getY());\
		\}\
\}\
\
5)
\b public
\b0  
\b class
\b0  Point \{\
	
\b private
\b0  
\b int
\b0  x;\
	
\b private
\b0  
\b int
\b0  y;\
	
\b public
\b0  Point (
\b int
\b0  px,
\b int
\b0  py)\{\
		
\b this
\b0 .x=px;\
		
\b this
\b0 .y=py;\
\}\
	
\b public
\b0  
\b static
\b0  
\b void
\b0  main(String[] args) \{\
		Point p=
\b \ul new
\b0  Point()\ulnone ; \
		System.
\i\b out
\i0\b0 .println(p.x+" "+p.y);\
	\
		\
	\}\
\}\
\
\
R\'e9ponse : \
Dans le main o\'f9 on ex\'e9cute la classe Point, cela ne fonctionne pas car le constructeur d\'e9pend de deux param\'e8tres (px et py) , car on demande d\'92executer Point sans param\'e8tre , donc \'e7a ne marche pas .Il faut alors changer l\'92appel du constructeur dans le main.\
Autrement dit, Point(): ne marche pas car le  constructeur est  mis \'e0 jour avec deux variables(px et py).\
 \
\
6)Ca ne change rien.\
\
7)Pour connaitre le nombre de points qui ont \'e9t\'e9 cr\'e9\'e9s ,on pourra cr\'e9er un variable static dans la classe point  qui s\'92incr\'e9mente \'e0 chaque appel du constructeur de point .\
\
8) Le nombre et le type des arguments du constructeur appel\'e9 va alors indiquer au compilateur java quel constructeur appel\'e9 .\
\
\
9)On r\'e9\'e9crit  la m\'e9thode toString() qui h\'e9rite  de la classe objet ( va nous permettre de modifier l\'92adresse m\'e9moire en cha\'eene de caract\'e8re lorqu\'92on fait un syso dans le main).\

\b \
public
\b0  String toString() \{\
		
\b return
\b0 ("("+ 
\b this
\b0 .x + "," + 
\b this
\b0 .y+ ")");\
	\}		\
\
\
\pard\pardeftab560\slleading20\partightenfactor0

\b \cf2 \ul EX 3:\ulnone \
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\slleading20\partightenfactor0

\b0 \cf2 1)Il affiche True car p1 et p2 ont la m\'eame adresse m\'e9moire  et False car p1 et p3 n\'92ont pas la m\'eame adresse m\'e9moire \
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf2 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf2 2)Une m\'e9thode isSameAs(Point) renvoyant true si deux points ont les m\'eames coordonn\'e9es. \
\
\pard\pardeftab560\slleading20\partightenfactor0

\b \cf2 public
\b0  
\b boolean
\b0  isSameAs(Point p) \{\
		
\b return
\b0  p.x==
\b this
\b0 .x && p.y==
\b this
\b0 .y;\
		\
	\}\
	\
3)Le compilateur pour p2 va indiquer 0, c\'92est \'e0 dire que les coordonn\'e9es de p2 sont bien \'e0 l\'92indice 0 dans la liste .\
Or,on a ajout\'e9 que p1 dans la liste .\
p1=p2 (En java \'e7a veut dire qu\'92ils ont la m\'eame adresse m\'e9moire).\
Ainsi list.indexof(point) va se r\'e9f\'e9rer \'e0 l\'92adresse m\'e9moire et non au coordonn\'e9es car ops voit bien que pour p3 (ayant les m\'eames coordonn\'e9es que p1 et P2 ), le compilateur va indiquer -1 .\
\
Dans la doc de la fonction  indexOf, la m\'e9thode appel\'e9 est equals de la classe Point.\
On va donc red\'e9finir equals afin que list.indexOff puisse retourner 0 pour les points qui ont les m\'eames coordonn\'e9es mais pas la m\'eame adresse m\'e9moire (ici c\'92est le cas de p1 et p3  par exemple).\
\
\
On propose le code suivant pour red\'e9finir la m\'e9thode :\
\
@Override\
	public boolean equals(Object ob) \{\
		Point p = (Point) ob;\
		return p.x == this.x && p.y==this.y;\
	\}\
\
\
\
\pard\pardeftab560\slleading20\partightenfactor0

\b \cf2 \ul EX 4\
\

\b0 \ulnone 1)Voir code source\
\
2)Si on d\'e9passe la capacit\'e9 du tableau , le compilateur affichera un message d\'92erreur .
\b \ul \
\

\b0 \ulnone 3)Voir code \
\
4)Voir code\
\
5)On a  NullPoniterException dans les deux cas car null n'est pas une adresse et ne peut \'eatre rajout\'e9 \'e0 une liste de Point.\
\
6)\cf3 \expnd0\expndtw0\kerning0
Voir la classe ModernPolyline.\
\
\pard\pardeftab720\sl400\partightenfactor0
\cf3 -pointCapacity: infiny, on peut toujours rajouter des points \'e0 la ligne.\
\pard\pardeftab720\sl400\qr\partightenfactor0
\cf3 \
\pard\pardeftab720\sl400\partightenfactor0
\cf3 -nbPoints : return LinkedList.size()\
\
 -contains : return LinkedList.contains(Point p)\
\
\pard\pardeftab560\slleading20\partightenfactor0

\b \cf2 \kerning1\expnd0\expndtw0 \ul Ex 5\
\

\b0 \ulnone 1)Translate agit directement sur les coordonn\'e9es du point et ne va rien retourner .\
\
2)Voir code\
\
3)Voir code \
\
4)Voir code\
\
5)Probl\'e8me: on peut modifier les coordonn\'e9e de c2 , il faut mettre l\'92attribut en final pour \'e9viter cela.\
\
6)Cela n\'92emp\'eache pas de modifier la valeur du centre .\
On rectifie cela de la mani\'e8re suivante:\
\
\
	public Point getCentre() \{\
		return new Point(centre);\
	\}\
7)Voir code\
\
8)Voir code \
\
9)Voir code\
La fonction est \'e9crite dans Point et est appel\'e9e dans la m\'e9thode main de la m\'eame classe, on peut donc la rendre static.\
\

\b \ul EX6\
\

\b0 \ulnone 1) Non ce n\'92est pas int\'e9ressant de faire l\'92h\'e9ritage car la surface d\'92un anneau n\'92est pas d\'e9fini de la m\'eame mani\'e8re .\
\
2)voir code\
\
3)Voir code\
\
4)On va croire que c\'92est un cercle donc il faut aussi red\'e9finir toString()\
\
5)Voir code\
\
6)Voir code\
\
\

\b \ul \
\

\b0 \ulnone \

\b \ul \
}